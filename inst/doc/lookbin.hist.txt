source("findbad.R", echo=TRUE)
bestsn2 = sapply(g20, function(x) topFeats(probeid=x, mgr=e2, ffind=1, anno="illuminaHumanv1.db", n=1))
mlp = function(x) -log10(1-pchisq(x,1)); which(mlp(bestsn) > mlp(bestsn2) & mlp(bestsn) > 8 )
e1@fflist["rs6021989",] -> BADS
e1@fflist[[1]]["rs6021989",] -> BADS
which.max(BADS)
e1@fflist[[1]]["rs6021989", 441]
table(as( smList(lith)[[1]][, "rs6021989"], "character" ))
e2@fflist[[1]]["rs6021989",] -> BADS2
which.max(BADS2)
e2@fflist[[1]]["rs6021989", 441]
e2@fflist[[1]]["rs6021989", 448]
ieqtlTests
which.max(BADS)
EX1 = exprs(lith)[ "GI_24430166-I", ]
DF = data.frame(EX1, pData(lith)$male )
DF = data.frame(EX1, male=pData(lith)$male )
SDAT = smList(lith)[[1]]
M1 = snp.rhs.tests( EX1~male, data=DF, snp.data=SDAT, family="gaussian" )
M2 = snp.rhs.tests( EX1~male, data=DF, snp.data=SDAT, family="gaussian", rules=imp20 )
length(imp20)
length(M2@chisq)
M2@chisq[1:5]
getSlots(class(M2))
all.equal(M2@test.names, names(imp20))
all.equal(M1@test.names, colnames(SDAT))
max(M2@chisq, na.rm=TRUE)
max(M!@chisq, na.rm=TRUE)
max(M1@chisq, na.rm=TRUE)
which.max(M2@chisq)
which.max(M1@chisq)
M1@chisq[96207]
M1@chisq[12807]
M2@chisq[96207]
ieqtlTests
 
debug(ieqtlTests)
debug(eqtlTests)
e3 = eqtlTests( lith, ~male, targdir = "foo2", runname="foo2" )
ngenes
nchr
chrNames
dput(eqtlTests, file="eqtlT.R")
source("eqtlT.R")
debug(eqtlT)
e3 = eqtlT( lith, ~male, targdir = "foo2T", runname="foo2T" )
source("eqtlT.R")
debug(eqtlT)
e3 = eqtlT( lith, ~male, targdir = "foo2T", runname="foo2T" )
debug(CF)
debug(CF)
e3 = eqtlT( lith, ~male, targdir = "foo2T", runname="foo2T" )
debug(CF)
debug(GF)
ex
length(ex)
length(numans)
dim(snpdata)
summary(numans)
class(numans)
is.double(numans)
summary(numans)
summary(numans)
range(rchisq(54000, 1))
range(rchisq(540000, 1))
range(rchisq(5400000, 1))
args(eqtlTests)
summary(numans)
summary(numans)
shortfac
summary(shortfac*numans)
dim(exprs(lith))
634*nsnps
range(rchisq(7.6e7, 1))
Q
savehistory(file="chkout.hist.txt")
source("findbad.R", echo=TRUE)
where
Q
undebug(eqtlTests)
set.seed(1234)
e1 = eqtlTests( lith, ~male, geneApply=mclapply )
save(e1, file="e1.rda")
bestsn = sapply(g20, function(x) topFeats(probeid=x, mgr=e1, ffind=1, anno="illuminaHumanv1.db", n=1))
badn = names(bestsn)
gdn = gsub(".*\\.", "", badn)
names(bestsn) = gdn
lo = hm20locs[names(bestsn)]
set.seed(1234)
e2 = ieqtlTests( lith, ~male, geneApply=mclapply, targdir="ifoo",
    runname="ifoo", rules=imp20 )
save(e2, file="e2.rda")
bestsn2 = sapply(g20, function(x) topFeats(probeid=x, mgr=e2, ffind=1, anno="illuminaHumanv1.db", n=1))
mlp = function(x) -log10(1-pchisq(x,1))
which( mlp(bestsn) > mlp(bestsn2) & mlp(bestsn) > 8 )
summary(bestsn)
summary(bestsn2)
plot(mlp(bestsn), mlp(bestsn2))
which( mlp(bestsn) > mlp(bestsn2) & mlp(bestsn) > 7 )
bestsn[.Last.value]
Q
topFeats
which.max(bestsn2)
bestsn2[342]
plot_EvG(probeId("GI_18426907-I"), rsid("rs2425278"), lith)
sort(bestsn2, decreasing=TRUE)[1:10]
plot_EvG(probeId("GI_31657130-S"), rsid("chr20:26064057"), lith)
args(impute.snps)
IS = impute.snps(imp20, smList(lith)[[1]])
dim(IS)
class(IS)
EX = exprs(lith)["GI_31657130-S",]
plot(EX~IS[, "chr20:26064057"])
imp20[["chr20:26064057"]]
imp20["chr20:26064057"]
range(IS)
range(IS, na.rm=TRUE))
range(IS, na.rm=TRUE)
?topFeats
sn1 = rownames(e1@fflist[[1]])
length(sn1)
args(topFeats)
bestG = mclapply(sn1, function(x) topFeats(rsid=x, e1, 1, "illuminaHumanv1.db", n=1,
 useSym=FALSE)
)
length(bestG)
bestG[1:10]
fix(topFeats)
bestG = mclapply(sn1, function(x) topFeats(rsid=x, mgr=e1, ffind=1, "ilanno=luminaHumanv1.db", n=1,
)
)
bestG[1:10]
bestG = mclapply(sn1, function(x) topFeats(rsid=x, mgr=e1, ffind=1, anno=luminaHumanv1.db", n=1,
 useSym=FALSE)
)
bestG = mclapply(sn1, function(x) topFeats(rsid=x, mgr=e1, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
bestG = mclapply(sn1[1:100], function(x) topFeats(rsid=x, mgr=e1, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
unlist(bestG)
table(table(names(.Last.value)))
bestG = mclapply(sn1[1:1000], function(x) topFeats(rsid=x, mgr=e1, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
summary(bestg)
summary(bestG)
summary(unlist(bestG))
sn2 = rownames(e2@fflist[[1]])
length(sn2)
bestG2 = mclapply(sn2[1:1000], function(x) topFeats(rsid=x, mgr=e2, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
summary(unlist(bestG2))
bestG2 = mclapply(sn2[1:2000], function(x) topFeats(rsid=x, mgr=e2, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
summary(unlist(bestG2))
length(bestG2)
bestG2
bestG2 = mclapply(sn2[1:20000], function(x) topFeats(rsid=x, mgr=e2, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
summary(bestG2)
summary(unlist(bestG2))
bestG2 = mclapply(sn2, function(x) topFeats(rsid=x, mgr=e2, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
summary(unlist(bestG2))
bestG1 = mclapply(sn, function(x) topFeats(rsid=x, mgr=e1, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
bestG1 = mclapply(sn1, function(x) topFeats(rsid=x, mgr=e1, ffind=1, anno="luminaHumanv1.db", n=1,
 useSym=FALSE))
BG1 = unlist(bestG1)
length(BG1)
objects()
length(hm20locs)
library(GenomicRanges)
BG1[1:5]
bg1 = GRanges(IRanges(hm20locs,width=1), gene=names(BG1))
hm20locsC = hm20locs
hm20locsC[is.na(hm20locsC)] = 1
bg1 = GRanges(IRanges(hm20locsC,width=1), gene=names(BG1))
hm20locsC[1:10]
bg1 = GRanges(IRanges(hm20locsC,width=1), seqnames="chr20", gene=names(BG1))
bg1[1:5]
names(bg1) = sn1
bg1[1:5]
bg1 = GRanges(IRanges(hm20locsC,width=1), seqnames="chr20", gene=names(BG1), chisq1=as.numeric(BG1))
bg1
savehistory(file="dorangelast.hist.txt")
BG2 = unlist(bestG2)
length(BG2)
objects()
length(clocs)
BIGLOC = c(clocs, hm20locsC)
table(table(names(BIGLOC))
)
sum(.Last.value)
length(BG2)
NG2 = names(BG2)
BL = BIGLOC[NG2]
BL[1:10]
BL[1000:1010]
BIGLOC[1:10]
NG2[1:10]
BL = BIGLOC[sn2]
BL[1000:1010]
BL[1:10]
length(BL)
summary(BL)
BLC = BL
BLC[is.na(BLC)] == 1
BLC[is.na(BLC)] = 1
bg2 = GRanges(BLC,width=1), seqnames="chr20", gene=names(BG2), chisq1=as.numeric(BG2))
bg2 = GRanges(IRanges(BLC,width=1), seqnames="chr20", gene=names(BG2), chisq1=as.numeric(BG2))
bg2
bg1
save(bg1, file="bg1.rda")
save(bg2, file="bg2.rda")
savehistory(file="dobg.hist.txt")
library(rtracklayer)
s1 = browserSession("ucsc")
s1 = browserSession("UCSC")
lk = IRanges(1, 1e6)
bg11 = bg1[ bg1 %in% lk ]
bg11 = bg1[ ranges(bg1) %in% lk ]
bg11
lk = IRanges(3, 1e6)
bg11 = bg1[ ranges(bg1) %in% lk ]
bg21 = bg2[ ranges(bg2) %in% lk ]
bg11
bg21
summary(bg21$chisq1)
summary(elementMetadata(bg21)$chisq1)
plot(elementMetadata(bg21)$chisq1~start(bg21))
par(mfrow=c(2,1))
plot(elementMetadata(bg21)$chisq1~start(bg21))
plot(elementMetadata(bg11)$chisq1~start(bg11))
plot(elementMetadata(bg11)$chisq1~start(bg11), pch=".")
plot(elementMetadata(bg11)$chisq1~start(bg11), pch=".", cex=2)
plot(elementMetadata(bg11)$chisq1~start(bg11), pch=".", cex=2)
plot(elementMetadata(bg21)$chisq1~start(bg21), pch=".", cex=2)
mlp 
plot(mlp(elementMetadata(bg21)$chisq1)~start(bg21), pch=".", cex=2)
plot(mlp(elementMetadata(bg11)$chisq1)~start(bg11), pch=".", cex=2)
plot(mlp(elementMetadata(bg11)$chisq1)~start(bg11), pch=".", cex=3)
plot(mlp(elementMetadata(bg21)$chisq1)~start(bg21), pch=".", cex=3)
par(mfrow=c(1,1))
plot(mlp(elementMetadata(bg21)$chisq1)~start(bg21), pch=".", cex=3, col="green")
plot(mlp(elementMetadata(bg21)$chisq1)~start(bg21), pch=".", cex=3, col="darkgreen")
plot(mlp(elementMetadata(bg11)$chisq1)~start(bg11), pch=".", cex=3, col="darkgreen")
points(mlp(elementMetadata(bg21)$chisq1)~start(bg21), pch=".", cex=3, col="red")
lk2 = IRanges(3,3e6)
bg21b = bg2[ ranges(bg2) %in% lk2 ]
bg11b = bg1[ ranges(bg1) %in% lk2 ]
plot(mlp(elementMetadata(bg11b)$chisq1)~start(bg11b), pch=".", cex=3, col="darkgreen")
points(mlp(elementMetadata(bg21b)$chisq1)~start(bg21b), pch=".", cex=3, col="red")
plot(mlp(elementMetadata(bg11b)$chisq1)~start(bg11b), pch=".", cex=3, col="darkgreen")
lk2 = IRanges(3,2e7)
bg21b = bg2[ ranges(bg2) %in% lk2 ]
bg11b = bg1[ ranges(bg1) %in% lk2 ]
plot(mlp(elementMetadata(bg11b)$chisq1)~start(bg11b), pch=".", cex=3, col="darkgreen")
range(mlp(elementMetadata(bg21b)$chisq1)
)
points(mlp(elementMetadata(bg21b)$chisq1)~start(bg21b), pch=".", cex=3, col="red")
X11()
plot(mlp(elementMetadata(bg11b)$chisq1)~start(bg11b), pch=".", cex=3, col="darkgreen")
sum(mlp(elementMetadata(bg11b)$chisq1)>8)
sum(mlp(elementMetadata(bg21b)$chisq1)>8)
sum(mlp(elementMetadata(bg11b)$chisq1)>7)
sum(mlp(elementMetadata(bg21b)$chisq1)>7)
savehistory(file="lkcompare.hist.txt")
objects()
e1
?X2chunk
bg1
bg2
table(table(elementMetadata(bg2)$gene))
sum(.Last.value)
bg2
summary(elementMetadata(bg2)$chisq)
search()
objects(9)
?runmean
?disjointBins
?splitRanges
?successiveViews
bg1
is(bg1, "Sequence")
?elementMetadata
window(bg1 , 3, 10000 )
args(window)
?window
window(bg1 , start=3, end=10 )
?window
?window
method?window-Sequence
method?"window-Sequence"
objects(9)
class?Sequence
?Rle
?endoApply
bg1
class?IRanges
class?GRanges
example("GRanges-class")
gr
window(gr, 1, width=2)
window(gr, 2, width=2)
shift(IRanges(2,3), 1)
shift(IRanges(2,3), 1:5)
shift(IRanges(2,3), 5
)
lapply(1:5, function(x) shift(IRanges(2,3), x))
?views
successiveIRanges(6, 5, 1 )
successiveIRanges(6"12, 5, 1 )
successiveIRanges(6:12, 5, 1 )
successiveIRanges(6 5, 1 )
successiveIRanges(6, 5, 1 )
successiveIRanges(6, 5, 1:5 )
?disjoin
gr
disjointBins(gr)
disjointBins(gr, 3)
showMethods("disjointBins"
disjointBins(ranges(gr))
disjointBins(ranges(gr), 3)
?disjointBins
  disjointBins(IRanges(c(3, 1, 10), c(5, 12, 13))) # c(2L, 1L, 2L)
showMethods("cut")
?splitRanges
bg1
successiveIRanges
successiveIRanges(100)
?successiveIRanges
successiveIRanges(rep(100,20))
successiveIRanges(rep(100,20)) -> BB
successiveIRanges(rep(10000,20))
successiveIRanges(rep(10000,30)) -> BB
BB
ee = findOverlaps(bg1, BB)
ee = findOverlaps(ranges(bg1), BB)
names(ee)
getClass(ee)
getClass(class(ee))
dim(matchMatrix(ee))
ee@matchMatrix[1:10,]
length(bg1)
successiveIRanges(rep(10000,3000)) -> BB
length(BB)
max(end(BB))
successiveIRanges(rep(10000,7000)) -> BB
max(end(BB))
ee = findOverlaps(ranges(bg1), BB)
dim(ee@matchMatrix)
table(table(ee@matchMatrix[,2]))
summary(values(bg1)$score)
names(values(bg1))
summary(values(bg1)$chisq1)
sum(table(table(ee@matchMatrix[,2])))
ff = split(values(bg1)$chisq, matchMatrix(ee)[,2])
sapply(ff,length)
plot(sapply(ff,median))
ff = split(mlp(values(bg1)$chisq), matchMatrix(ee)[,2])
plot(sapply(ff,median))
plot(sapply(ff,max))
savehistory(file="lookbin.hist.txt")
